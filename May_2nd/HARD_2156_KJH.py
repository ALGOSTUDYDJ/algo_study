# 백준 2156. 포도주 시식

# 포도주 잔의 수 입력
n = int(input())

# n 순회하며 포도주의 양 입력
wines = [int(input()) for _ in range(n)]

# dp로 풀이, dp 리스트 초기화
# dp 배열에는 각각 3가지 경우
# (이전 , 지금) 기준으로 ( ? , 안마심 ), ( 안마심, 마심 ), (마심, 마심)
# dp = [[0, 0, 0]] * (n+1)
dp = [[0, 0, 0] for _ in range(n)]

# 첫 DP는 수기로 계산
dp[0] = [0, wines[0], wines[0]]

# 우선 n 순회
for i in range(1, n):
    # 이번 잔을 마시지 않을 경우, 이전 잔을 마셨는지 여부는 관계 없으므로 이전 배열의 최대값
    dp[i][0] = max(dp[i-1])
    # 이전에 안마신 경우는 0번 인덱스
    dp[i][1] = dp[i-1][0] + wines[i]
    # 이전에 마신 경우는 1, 2번 인덱스이지만, 2번 인덱스를 선택하면 3번 연속 마시는 경우이므로 pass
    dp[i][2] = dp[i-1][1] + wines[i]

# 최종 값 출력
print(max(dp[n-1]))